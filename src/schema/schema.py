# Code generated by github.com/lolopinto/ent/ent, DO NOT edit. (TODO figure out correct pythonic way of doing this)

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

metadata = sa.MetaData()

 
sa.Table("answer_authors_edges", metadata,
    sa.Column("id1", postgresql.UUID(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("id2", postgresql.UUID(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="answer_authors_edges_id1_edge_type_id2_pkey"),
    sa.Index("answer_authors_edges_time_idx", "time"),
)
   
sa.Table("answer_comment_authors_edges", metadata,
    sa.Column("id1", postgresql.UUID(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("id2", postgresql.UUID(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="answer_comment_authors_edges_id1_edge_type_id2_pkey"),
    sa.Index("answer_comment_authors_edges_time_idx", "time"),
)
   
sa.Table("answer_comments", metadata,
    sa.Column("id", postgresql.UUID(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("body", sa.Text(), nullable=False),
    sa.Column("answer_id", postgresql.UUID(), nullable=False),
    sa.Column("user_id", postgresql.UUID(), nullable=False),
    sa.PrimaryKeyConstraint("id", name="answer_comments_id_pkey"),
)
   
sa.Table("answer_comments_edges", metadata,
    sa.Column("id1", postgresql.UUID(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("id2", postgresql.UUID(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="answer_comments_edges_id1_edge_type_id2_pkey"),
    sa.Index("answer_comments_edges_time_idx", "time"),
)
   
sa.Table("answers", metadata,
    sa.Column("id", postgresql.UUID(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("body", sa.Text(), nullable=False),
    sa.Column("accepted_answer", sa.Boolean(), nullable=False),
    sa.Column("question_id", postgresql.UUID(), nullable=False),
    sa.Column("user_id", postgresql.UUID(), nullable=False),
    sa.PrimaryKeyConstraint("id", name="answers_id_pkey"),
)
   
sa.Table("assoc_edge_config", metadata,
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("edge_name", sa.Text(), nullable=False),
    sa.Column("symmetric_edge", sa.Boolean(), nullable=False, server_default='false'),
    sa.Column("inverse_edge_type", postgresql.UUID(), nullable=True),
    sa.Column("edge_table", sa.Text(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint("edge_type", name="assoc_edge_config_edge_type_pkey"),
    sa.UniqueConstraint("edge_name", name="assoc_edge_config_unique_edge_name"),
    sa.ForeignKeyConstraint(["inverse_edge_type"], ["assoc_edge_config.edge_type"], name="assoc_edge_config_inverse_edge_type_fkey", ondelete="RESTRICT"),
)
   
sa.Table("question_answers_edges", metadata,
    sa.Column("id1", postgresql.UUID(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("id2", postgresql.UUID(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="question_answers_edges_id1_edge_type_id2_pkey"),
    sa.Index("question_answers_edges_time_idx", "time"),
)
   
sa.Table("question_authors_edges", metadata,
    sa.Column("id1", postgresql.UUID(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("id2", postgresql.UUID(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="question_authors_edges_id1_edge_type_id2_pkey"),
    sa.Index("question_authors_edges_time_idx", "time"),
)
   
sa.Table("question_comment_authors_edges", metadata,
    sa.Column("id1", postgresql.UUID(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("id2", postgresql.UUID(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="question_comment_authors_edges_id1_edge_type_id2_pkey"),
    sa.Index("question_comment_authors_edges_time_idx", "time"),
)
   
sa.Table("question_comments", metadata,
    sa.Column("id", postgresql.UUID(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("body", sa.Text(), nullable=False),
    sa.Column("question_id", postgresql.UUID(), nullable=False),
    sa.Column("user_id", postgresql.UUID(), nullable=False),
    sa.PrimaryKeyConstraint("id", name="question_comments_id_pkey"),
)
   
sa.Table("question_comments_edges", metadata,
    sa.Column("id1", postgresql.UUID(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("id2", postgresql.UUID(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="question_comments_edges_id1_edge_type_id2_pkey"),
    sa.Index("question_comments_edges_time_idx", "time"),
)
   
sa.Table("questions", metadata,
    sa.Column("id", postgresql.UUID(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("title", sa.Text(), nullable=False),
    sa.Column("question_body", sa.Text(), nullable=False),
    sa.Column("answered", sa.Boolean(), nullable=False),
    sa.Column("user_id", postgresql.UUID(), nullable=False),
    sa.PrimaryKeyConstraint("id", name="questions_id_pkey"),
)
   
sa.Table("user_authored_answer_comments_edges", metadata,
    sa.Column("id1", postgresql.UUID(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("id2", postgresql.UUID(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="user_authored_answer_comments_edges_id1_edge_type_id2_pkey"),
    sa.Index("user_authored_answer_comments_edges_time_idx", "time"),
)
   
sa.Table("user_authored_answers_edges", metadata,
    sa.Column("id1", postgresql.UUID(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("id2", postgresql.UUID(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="user_authored_answers_edges_id1_edge_type_id2_pkey"),
    sa.Index("user_authored_answers_edges_time_idx", "time"),
)
   
sa.Table("user_authored_question_comments_edges", metadata,
    sa.Column("id1", postgresql.UUID(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("id2", postgresql.UUID(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="user_authored_question_comments_edges_id1_edge_type_id2_pkey"),
    sa.Index("user_authored_question_comments_edges_time_idx", "time"),
)
   
sa.Table("user_authored_questions_edges", metadata,
    sa.Column("id1", postgresql.UUID(), nullable=False),
    sa.Column("id1_type", sa.Text(), nullable=False),
    sa.Column("edge_type", postgresql.UUID(), nullable=False),
    sa.Column("id2", postgresql.UUID(), nullable=False),
    sa.Column("id2_type", sa.Text(), nullable=False),
    sa.Column("time", sa.TIMESTAMP(), nullable=False),
    sa.Column("data", sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint("id1", "edge_type", "id2", name="user_authored_questions_edges_id1_edge_type_id2_pkey"),
    sa.Index("user_authored_questions_edges_time_idx", "time"),
)
   
sa.Table("users", metadata,
    sa.Column("id", postgresql.UUID(), nullable=False),
    sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
    sa.Column("first_name", sa.Text(), nullable=False),
    sa.Column("last_name", sa.Text(), nullable=False),
    sa.Column("email_address", sa.Text(), nullable=False),
    sa.Column("password", sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint("id", name="users_id_pkey"),
    sa.UniqueConstraint("email_address", name="users_unique_email_address"),
)
  

metadata.info["edges"] = {
  'public': {
    'AnswerCommentToAuthorsEdge': {"edge_name":"AnswerCommentToAuthorsEdge", "edge_type":"fdba641e-4f7e-4c7a-a1d1-fca2a1ed68dc", "edge_table":"answer_comment_authors_edges", "symmetric_edge":False, "inverse_edge_type":"21319a5d-1678-4a97-8d9f-e8af198504b2"},
    'AnswerCommentsToAuthorsEdge': {"edge_name":"AnswerCommentsToAuthorsEdge", "edge_type":"39bfd663-0fd1-4268-aed3-8978ac3af5f9", "edge_table":"answer_comments_authors_edges", "symmetric_edge":False, "inverse_edge_type":"21319a5d-1678-4a97-8d9f-e8af198504b2"},
    'AnswerToAuthorsEdge': {"edge_name":"AnswerToAuthorsEdge", "edge_type":"6226f374-ada1-4acb-a1d3-f0f3e1603ba6", "edge_table":"answer_authors_edges", "symmetric_edge":False, "inverse_edge_type":"334a0a65-f4bf-4119-b1b8-7e60e86c5374"},
    'AnswerToCommentsEdge': {"edge_name":"AnswerToCommentsEdge", "edge_type":"f69f8452-a1be-45e8-8c71-a1fcc6a0dbcd", "edge_table":"answer_comments_edges", "symmetric_edge":False, "inverse_edge_type":None},
    'QuestionCommentToAuthorsEdge': {"edge_name":"QuestionCommentToAuthorsEdge", "edge_type":"1daa71ae-916d-45d5-b86a-91de3dc33356", "edge_table":"question_comment_authors_edges", "symmetric_edge":False, "inverse_edge_type":"1888c833-ad80-4f06-846b-96fab877b50b"},
    'QuestionToAnswersEdge': {"edge_name":"QuestionToAnswersEdge", "edge_type":"69eb1cb3-9fa7-437b-8474-21092a525de7", "edge_table":"question_answers_edges", "symmetric_edge":False, "inverse_edge_type":None},
    'QuestionToAuthorsEdge': {"edge_name":"QuestionToAuthorsEdge", "edge_type":"dbdae75e-1072-438e-8713-4f4284b289ad", "edge_table":"question_authors_edges", "symmetric_edge":False, "inverse_edge_type":"f5f98bc4-94ed-4b3d-88b5-628992440185"},
    'QuestionToCommentsEdge': {"edge_name":"QuestionToCommentsEdge", "edge_type":"1f939a84-c765-4168-a6d1-ac9deea9d34e", "edge_table":"question_comments_edges", "symmetric_edge":False, "inverse_edge_type":None},
    'UserToAuthorToAuthoredAnswerCommentsEdge': {"edge_name":"UserToAuthorToAuthoredAnswerCommentsEdge", "edge_type":"21319a5d-1678-4a97-8d9f-e8af198504b2", "edge_table":"answer_comments_authors_edges", "symmetric_edge":False, "inverse_edge_type":"39bfd663-0fd1-4268-aed3-8978ac3af5f9"},
    'UserToAuthorToAuthoredAnswersEdge': {"edge_name":"UserToAuthorToAuthoredAnswersEdge", "edge_type":"334a0a65-f4bf-4119-b1b8-7e60e86c5374", "edge_table":"answer_authors_edges", "symmetric_edge":False, "inverse_edge_type":"6226f374-ada1-4acb-a1d3-f0f3e1603ba6"},
    'UserToAuthorToAuthoredQuestionCommentsEdge': {"edge_name":"UserToAuthorToAuthoredQuestionCommentsEdge", "edge_type":"1888c833-ad80-4f06-846b-96fab877b50b", "edge_table":"question_comment_authors_edges", "symmetric_edge":False, "inverse_edge_type":"1daa71ae-916d-45d5-b86a-91de3dc33356"},
    'UserToAuthorToAuthoredQuestionsEdge': {"edge_name":"UserToAuthorToAuthoredQuestionsEdge", "edge_type":"f5f98bc4-94ed-4b3d-88b5-628992440185", "edge_table":"question_authors_edges", "symmetric_edge":False, "inverse_edge_type":"dbdae75e-1072-438e-8713-4f4284b289ad"},
    'UserToAuthoredAnswerCommentsEdge': {"edge_name":"UserToAuthoredAnswerCommentsEdge", "edge_type":"2bd913d5-a2cb-485b-9563-4c2e447b99b2", "edge_table":"user_authored_answer_comments_edges", "symmetric_edge":False, "inverse_edge_type":None},
    'UserToAuthoredAnswersEdge': {"edge_name":"UserToAuthoredAnswersEdge", "edge_type":"b39d9e6f-2249-4c6c-b4b3-e8c14430b60e", "edge_table":"user_authored_answers_edges", "symmetric_edge":False, "inverse_edge_type":None},
    'UserToAuthoredQuestionCommentsEdge': {"edge_name":"UserToAuthoredQuestionCommentsEdge", "edge_type":"641dd0e0-ca29-44cb-8c78-21c6a9962609", "edge_table":"user_authored_question_comments_edges", "symmetric_edge":False, "inverse_edge_type":None},
    'UserToAuthoredQuestionsEdge': {"edge_name":"UserToAuthoredQuestionsEdge", "edge_type":"eb398e63-df78-40d2-9e86-50a3a788c88f", "edge_table":"question_authors_edges", "symmetric_edge":False, "inverse_edge_type":"dbdae75e-1072-438e-8713-4f4284b289ad"},
  }
}



def get_metadata():
  return metadata
