# Code generated by github.com/lolopinto/ent/ent, DO NOT edit.

"""add user_question_private_notes_edges table
add index user_question_private_notes_edges_time_idx to user_question_private_notes_edges
drop index user_private_notes_edges_time_idx from user_private_notes_edges
drop user_private_notes_edges table
add edge UserToQuestionPrivateNotesEdge

Revision ID: c97f7e506f24
Revises: ee127faf7579
Create Date: 2021-06-23 10:17:07.795000+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c97f7e506f24'
down_revision = 'ee127faf7579'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_question_private_notes_edges',
                    sa.Column('id1', postgresql.UUID(), nullable=False),
                    sa.Column('id1_type', sa.Text(), nullable=False),
                    sa.Column('edge_type', postgresql.UUID(), nullable=False),
                    sa.Column('id2', postgresql.UUID(), nullable=False),
                    sa.Column('id2_type', sa.Text(), nullable=False),
                    sa.Column('time', sa.TIMESTAMP(), nullable=False),
                    sa.Column('data', sa.Text(), nullable=True),
                    sa.PrimaryKeyConstraint(
                        'id1', 'edge_type', 'id2', name='user_question_private_notes_edges_id1_edge_type_id2_pkey')
                    )
    op.create_index('user_question_private_notes_edges_time_idx',
                    'user_question_private_notes_edges', ['time'], unique=False)
    op.drop_index('user_private_notes_edges_time_idx',
                  table_name='user_private_notes_edges')
    op.drop_table('user_private_notes_edges')
    op.add_edges([
        {'edge_name': 'UserToQuestionPrivateNotesEdge', 'edge_type': '5da8f466-0498-42ed-9f0f-9138223793b9',
            'edge_table': 'user_question_private_notes_edges', 'symmetric_edge': False, 'inverse_edge_type': None},
    ])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.remove_edges([
        {'edge_name': 'UserToQuestionPrivateNotesEdge', 'edge_type': '5da8f466-0498-42ed-9f0f-9138223793b9',
            'edge_table': 'user_question_private_notes_edges', 'symmetric_edge': False, 'inverse_edge_type': None},
    ])

    op.create_table('user_private_notes_edges',
                    sa.Column('id1', postgresql.UUID(),
                              autoincrement=False, nullable=False),
                    sa.Column('id1_type', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('edge_type', postgresql.UUID(),
                              autoincrement=False, nullable=False),
                    sa.Column('id2', postgresql.UUID(),
                              autoincrement=False, nullable=False),
                    sa.Column('id2_type', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('time', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=False),
                    sa.Column('data', sa.TEXT(),
                              autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint(
                        'id1', 'edge_type', 'id2', name='user_private_notes_edges_id1_edge_type_id2_pkey')
                    )
    op.create_index('user_private_notes_edges_time_idx',
                    'user_private_notes_edges', ['time'], unique=False)
    op.drop_index('user_question_private_notes_edges_time_idx',
                  table_name='user_question_private_notes_edges')
    op.drop_table('user_question_private_notes_edges')
    # ### end Alembic commands ###
