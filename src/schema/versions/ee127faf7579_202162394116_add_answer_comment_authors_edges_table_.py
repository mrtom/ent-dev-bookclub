# Code generated by github.com/lolopinto/ent/ent, DO NOT edit.

"""add answer_comment_authors_edges table
add index answer_comment_authors_edges_time_idx to answer_comment_authors_edges
drop index answer_comments_authors_edges_time_idx from answer_comments_authors_edges
drop answer_comments_authors_edges table
add edge AnswerCommentToAuthorsEdge

Revision ID: ee127faf7579
Revises: 4d41e915e805
Create Date: 2021-06-23 09:41:16.079802+00:00

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ee127faf7579'
down_revision = '4d41e915e805'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('answer_comment_authors_edges',
                    sa.Column('id1', postgresql.UUID(), nullable=False),
                    sa.Column('id1_type', sa.Text(), nullable=False),
                    sa.Column('edge_type', postgresql.UUID(), nullable=False),
                    sa.Column('id2', postgresql.UUID(), nullable=False),
                    sa.Column('id2_type', sa.Text(), nullable=False),
                    sa.Column('time', sa.TIMESTAMP(), nullable=False),
                    sa.Column('data', sa.Text(), nullable=True),
                    sa.PrimaryKeyConstraint(
                        'id1', 'edge_type', 'id2', name='answer_comment_authors_edges_id1_edge_type_id2_pkey')
                    )
    op.create_index('answer_comment_authors_edges_time_idx',
                    'answer_comment_authors_edges', ['time'], unique=False)
    op.drop_index('answer_comments_authors_edges_time_idx',
                  table_name='answer_comments_authors_edges')
    op.drop_table('answer_comments_authors_edges')
    op.add_edges([
        {'edge_name': 'AnswerCommentToAuthorsEdge', 'edge_type': 'fdba641e-4f7e-4c7a-a1d1-fca2a1ed68dc',
            'edge_table': 'answer_comment_authors_edges', 'symmetric_edge': False, 'inverse_edge_type': '21319a5d-1678-4a97-8d9f-e8af198504b2'},
    ])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.remove_edges([
        {'edge_name': 'AnswerCommentToAuthorsEdge', 'edge_type': 'fdba641e-4f7e-4c7a-a1d1-fca2a1ed68dc',
            'edge_table': 'answer_comment_authors_edges', 'symmetric_edge': False, 'inverse_edge_type': '21319a5d-1678-4a97-8d9f-e8af198504b2'},
    ])

    op.create_table('answer_comments_authors_edges',
                    sa.Column('id1', postgresql.UUID(),
                              autoincrement=False, nullable=False),
                    sa.Column('id1_type', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('edge_type', postgresql.UUID(),
                              autoincrement=False, nullable=False),
                    sa.Column('id2', postgresql.UUID(),
                              autoincrement=False, nullable=False),
                    sa.Column('id2_type', sa.TEXT(),
                              autoincrement=False, nullable=False),
                    sa.Column('time', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=False),
                    sa.Column('data', sa.TEXT(),
                              autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint(
                        'id1', 'edge_type', 'id2', name='answer_comments_authors_edges_id1_edge_type_id2_pkey')
                    )
    op.create_index('answer_comments_authors_edges_time_idx',
                    'answer_comments_authors_edges', ['time'], unique=False)
    op.drop_index('answer_comment_authors_edges_time_idx',
                  table_name='answer_comment_authors_edges')
    op.drop_table('answer_comment_authors_edges')
    # ### end Alembic commands ###
